name: Make ad-hoc build

on:
  workflow_dispatch:
    inputs:
      suffix:
        description: 'Suffix to append to the build name'
        required: false

jobs:
  make-adhoc:
    runs-on: macos-13
    name: Make ad-hoc build

    steps:

      - name: Set suffix output
        id: suffix
        run: |
          INPUT_SUFFIX=${{ github.event.inputs.suffix }}
          echo "suffix=${INPUT_DESTINATION:-"appstore"}" >> $GITHUB_OUTPUT

      - name: Register SSH keys for access to certificates
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_FASTLANE_MATCH }}

      - name: Check out the code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Set cache key hash
        run: |
          has_only_tags=$(jq '[ .object.pins[].state | has("version") ] | all' DuckDuckGo.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved)
          if [[ "$has_only_tags" == "true" ]]; then
            echo "cache_key_hash=${{ hashFiles('DuckDuckGo.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}" >> $GITHUB_ENV
          else
            echo "Package.resolved contains dependencies specified by branch or commit, skipping cache."
          fi

      - name: Cache SPM
        if: env.cache_key_hash
        uses: actions/cache@v3
        with:
          path: DerivedData/SourcePackages
          key: ${{ runner.os }}-spm-${{ env.cache_key_hash }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Decrypt the fonts
        env:
          FONTS_ENCRYPTION_KEY: ${{ secrets.FONTS_ENCRYPTION_KEY }}
        run: ./scripts/decrypt_fonts.sh
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_$(<.xcode-version).app/Contents/Developer

      - name: Prepare fastlane
        run: bundle install

      - name: Archive and upload the app
        env:
          APPLE_API_KEY_BASE64: ${{ secrets.APPLE_API_KEY_BASE64 }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER: ${{ secrets.APPLE_API_KEY_ISSUER }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          if [[ -n "${{ github.event.inputs.suffix }}" ]]; then
            bundle exec fastlane adhoc output:./build suffix:${{ github.event.inputs.suffix }}
          else
            bundle exec fastlane adhoc output:./build
          fi

      - name: Fetch ad hoc build artifact
        uses: actions/download-artifact@v3
        with:
          path: ./build
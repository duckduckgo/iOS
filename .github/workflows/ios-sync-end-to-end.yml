name: iOS - Sync-End-to-End tests

on:
  schedule:
    - cron: '0 1 * * *' # run at 1 AM UTC
  workflow_dispatch:

jobs:
  build-for-sync-end-to-end-tests:
    name: Build for Sync End To End Tests
    runs-on: macos-15-xlarge
    timeout-minutes: 30

    steps:
    - name: Check out the code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set cache key hash
      run: |
         has_only_tags=$(jq '[ .pins[].state | has("version") ] | all' DuckDuckGo-iOS.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved)
         if [[ "$has_only_tags" == "true" ]]; then
           echo "cache_key_hash=${{ hashFiles('DuckDuckGo-iOS.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}" >> $GITHUB_ENV
         else
           echo "Package.resolved contains dependencies specified by branch or commit, skipping cache."
         fi

    - name: Cache SPM
      if: env.cache_key_hash
      uses: actions/cache@v4
      with:
        path: DerivedData/SourcePackages
        key: ${{ runner.os }}-spm-${{ env.cache_key_hash }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_$(<.xcode-version).app/Contents/Developer

    - name: Build for tests
      run: |
        set -o pipefail && xcodebuild \
          -scheme "DuckDuckGo" \
          -destination "platform=iOS Simulator,name=iPhone 16" \
          -derivedDataPath "DerivedData" \
          -skipPackagePluginValidation \
          -skipMacroValidation \
          ONLY_ACTIVE_ARCH=NO \
        | tee xcodebuild.log

    - name: Store Binary
      uses: actions/upload-artifact@v4
      with:
        name: duckduckgo-ios-app
        path: DerivedData/Build/Products/Debug-iphonesimulator/DuckDuckGo.app

    - name: Upload logs when workflow failed
      uses: actions/upload-artifact@v4
      if: failure() || cancelled()
      with:
        name: BuildLogs
        path: |
          xcodebuild.log
          DerivedData/Logs/Test/*.xcresult
        retention-days: 7

  sync-end-to-end-tests:
    name: Sync End To End Tests
    needs: build-for-sync-end-to-end-tests
    runs-on: macos-15
    timeout-minutes: 240
    strategy:
      matrix:
        os-version: [17] #[15, 16, 17]
      max-parallel: 1 # Uncomment this line to run tests sequentially.
      fail-fast: false

    steps:
    - name: Check out the code
      uses: actions/checkout@v4 # Don't need submodules here as this is only for the tests folder

    - name: Create test account for Sync and return the recovery code
      uses: duckduckgo/sync_crypto/action@main
      id: sync-recovery-code
      with:
        debug: true

    - name: Retrieve Binary
      uses: actions/download-artifact@v4
      with:
        name: duckduckgo-ios-app
        path: DerivedData/Build/Products/Debug-iphonesimulator/DuckDuckGo.app

    - name: Overwrite default config with sync one
      run: |
        cp .maestro/config-sync .maestro/config.yaml

    - name: Sync e2e tests
      id: upload
      uses: loremattei/action-maestro-cloud@fix-timeout-handling
      with:
        api-key: ${{ secrets.ROBIN_API_KEY }}
        project-id: ${{ vars.ROBIN_PROJECT_KEY }}
        name: sync_${{ github.sha }}
        timeout: 240
        app-file: DerivedData/Build/Products/Debug-iphonesimulator/DuckDuckGo.app
        workspace: .maestro
        include-tags: sync
        env: | 
          ONBOARDING_COMPLETED=true
          CODE=${{ steps.sync-recovery-code.outputs.recovery-code }}
        ios-version: ${{ matrix.os-version }}
        fail-on-timeout: true

    - name: Reset config
      run: |
        git checkout .maestro/config.yaml

    

  # notify-failure:
  #   name: Notify on failure
  #   if: ${{ always() && contains(join(needs.*.result, ','), 'failure') && github.ref_name == 'main' }}
  #   needs: [build-for-sync-end-to-end-tests, sync-end-to-end-tests]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Create Asana task when workflow failed
  #       run: |
  #         curl -s "https://app.asana.com/api/1.0/tasks" \
  #           --header "Accept: application/json" \
  #           --header "Authorization: Bearer ${{ secrets.ASANA_ACCESS_TOKEN }}" \
  #           --header "Content-Type: application/json" \
  #           --data ' { "data": { "name": "GH Workflow Failure - Sync End to end tests", "workspace": "${{ vars.GH_ASANA_WORKSPACE_ID }}", "projects": [ "${{ vars.GH_ASANA_IOS_APP_PROJECT_ID }}" ], "notes" : "The end to end workflow has failed. See https://github.com/duckduckgo/iOS/actions/runs/${{ github.run_id }}" } }'

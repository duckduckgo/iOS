name: PR Checks

on: 
  push:
    branches: [ develop, "release/**" ]
  pull_request:
    branches: [ develop, "release/**" ]


jobs:
  swiftlint:

    name: SwiftLint

    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Run SwiftLint on all files
      uses: norio-nomura/action-swiftlint@3.2.1
      with:
        args: --strict --force-exclude

  shellcheck:

    name: ShellCheck

    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        format: gcc
        scandir: scripts

  unit-tests:

    name: Unit Tests

    runs-on: macos-13
    timeout-minutes: 30

    steps:
    - name: Check out the code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set cache key hash
      run: |
         has_only_tags=$(jq '[ .object.pins[].state | has("version") ] | all' DuckDuckGo.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved)
         if [[ "$has_only_tags" == "true" ]]; then
           echo "cache_key_hash=${{ hashFiles('DuckDuckGo.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}" >> $GITHUB_ENV
         else
           echo "Package.resolved contains dependencies specified by branch or commit, skipping cache."
         fi

    - name: Cache SPM
      if: env.cache_key_hash
      uses: actions/cache@v3
      with:
        path: DerivedData/SourcePackages
        key: ${{ runner.os }}-spm-${{ env.cache_key_hash }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - name: Install xcbeautify
      run: brew install xcbeautify

    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_$(<.xcode-version).app/Contents/Developer

    - name: Build and test
      run: |
        set -o pipefail && xcodebuild test \
          -scheme "DuckDuckGo" \
          -destination "platform=iOS Simulator,name=iPhone 14,OS=16.4" \
          -derivedDataPath "DerivedData" \
          DDG_SLOW_COMPILE_CHECK_THRESHOLD=250 \
          | tee xcodebuild.log \
          | xcbeautify --report junit --report-path . --junit-report-filename unittests.xml

    - name: Upload logs if workflow failed
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: BuildLogs
        path: |
          xcodebuild.log
          DerivedData/Logs/Test/*.xcresult
        retention-days: 7

    - name: Publish unit tests report
      uses: mikepenz/action-junit-report@v3
      with:
        report_paths: unittests.xml

  asana:
    name: Create Asana Task
    needs: [swiftlint, unit-tests, shellcheck]

    if: failure() && github.ref_name == 'develop'
    
    env:
      WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    
    runs-on: ubuntu-latest

    steps:
      - name: Create Asana Task
        uses: malmstein/github-asana-action@master
        with:
          asana-pat: ${{ secrets.ASANA_ACCESS_TOKEN }}
          asana-project: ${{ vars.APPLE_CI_FAILING_TESTS_PROJECT_ID }}
          asana-section: ${{ vars.APPLE_CI_FAILING_TESTS_IOS_POST_MERGE_SECTION_ID }}
          asana-task-name: 'PR Check is failing on develop'
          action: create-asana-task
          asana-task-description: PR Checks conducted after merging have failed.  See ${{ env.WORKFLOW_URL }}
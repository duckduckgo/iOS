---
format_version: '6'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- push_branch: "*"
  workflow: Primary
- pull_request_target_branch: "*"
  workflow: Primary
workflows:
  AtbUITests:
    steps:
    - activate-ssh-key@4.0:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.2: {}
    - swiftlint@0:
        inputs:
        - linting_path: "$BITRISE_SOURCE_DIR"
    - certificate-and-profile-installer@1.10: {}
    - xcode-test@2.5:
        deps:
          brew:
          - name: swiftlint
        inputs:
        - project_path: "$BITRISE_PROJECT_PATH"
        - should_build_before_test: 'no'
        - should_retry_test_on_fail: 'yes'
        - simulator_device: iPhone 8
        - scheme: AtbUITests
        title: Atb UI Tests
        is_always_run: true
    - deploy-to-bitrise-io@1.13: {}
  FingerprintingUITests:
    steps:
    - activate-ssh-key@4.0:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0: {}
    - swiftlint@0:
        inputs:
        - linting_path: "$BITRISE_SOURCE_DIR"
    - certificate-and-profile-installer@1.10: {}
    - script@1:
        inputs:
        - content: |
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # From https://support.bitrise.io/hc/en-us/articles/360019059918?input_string=occasional+failures+running+ui+tests
            # If we still get intermittent failures due to "failed to boot simulator" errors then we should open a support ticket

            npm install -g ios-sim

            ios-sim start --devicetypeid "com.apple.CoreSimulator.SimDeviceType.iPhone-8, 14.4"

            sleep 60
    - xcode-test@2.4:
        deps:
          brew:
          - name: swiftlint
        inputs:
        - project_path: "$BITRISE_PROJECT_PATH"
        - should_build_before_test: 'no'
        - should_retry_test_on_fail: 'yes'
        - simulator_device: iPhone 8
        - headless_mode: 'no'
        - scheme: FingerprintingUITests
        title: FingerprintingUITests
        is_always_run: true
    - deploy-to-bitrise-io@1.10: {}
  Primary:
    steps:
    - activate-ssh-key@4.0:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0: {}
    - swiftlint@0:
        inputs:
        - linting_path: "$BITRISE_SOURCE_DIR"
    - npm@1.1.4:
        inputs:
        - command: install
    - npm@1.1.4:
        inputs:
        - command: test
    - certificate-and-profile-installer@1.10: {}
    - xcode-test@4.0:
        deps:
          brew:
          - name: swiftlint
        inputs:
        - project_path: "$BITRISE_PROJECT_PATH"
        - should_build_before_test: 'no'
        - test_repetition_mode: retry_on_failure
        - simulator_device: iPhone 8
        - scheme: "$BITRISE_SCHEME"
    - deploy-to-bitrise-io@1.10: {}
  Release:
    steps:
    - activate-ssh-key@4.0:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - script@1:
        inputs:
        - content: "#!/usr/bin/env bash\n# fail if any commands fails\nset -e\n# debug
            log\nset -x\n\n# See https://stackoverflow.com/a/18558871/73479\nbeginsWith()
            { case $2 in \"$1\"*) true;; *) false;; esac; }\n\n# Check we are on a
            release branch\nif beginsWith \"release/\" $BITRISE_GIT_BRANCH; then\n
            \   echo \"Working on a release branch \U0001F44D\"\nelif beginsWith \"hotfix/\"
            $BITRISE_GIT_BRANCH; then\n    echo \"Working on a hotfix branch \U0001F44D\"\nelse
            \n    echo \"\U0001F44E Not a release or hotfix branch\"\n    exit 1\nfi"
        title: Assert Release Branch
    - git-clone@4.0: {}
    - script@1:
        inputs:
        - content: |
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            curl $BITRISEIO_FONTS_URL -o $BITRISE_SOURCE_DIR/fonts.tar

            ls -la $BITRISE_SOURCE_DIR/fonts.tar

            tar -xf $BITRISE_SOURCE_DIR/fonts.tar -C $BITRISE_SOURCE_DIR/fonts/licensed

            find . | grep otf | xargs ls -la
        title: Install Fonts
    - swiftlint@0:
        inputs:
        - linting_path: "$BITRISE_SOURCE_DIR"
    - ios-auto-provision-appstoreconnect@2:
        inputs:
        - distribution_type: app-store
    - certificate-and-profile-installer@1.10: {}
    - fastlane@3:
        inputs:
        - connection: api_key
        - lane: release
    - deploy-to-bitrise-io@1.10: {}
    envs:
    - opts:
        is_expand: false
      BITRISE_EXPORT_METHOD: app-store
    - opts:
        is_expand: false
      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: '60'
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: DuckDuckGo.xcodeproj
  - opts:
      is_expand: false
    BITRISE_SCHEME: DuckDuckGo
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: ad-hoc
meta:
  bitrise.io:
    machine_type: elite_xl
